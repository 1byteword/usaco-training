<html><body bgcolor="#000000" text="#ffffff"><table><tr><td colspan="2"><h3>Problem Statement</h3></td></tr><tr><td>&#160;&#160;&#160;&#160;</td><td><p>
	You are given a goal word as a string <b>matchString</b> and puzzle words as a 
	string[] <b>matchWords</b>.
	The number of puzzle words is equal to the number of letters in the goal word. 
	Assume all letters in all words have the same width and height.
</p>
<br></br>
<p>
	You want to play a game. At the beginning of the game, all the words from <b>matchWords</b> are arranged one below 
	another, in the order that they're given.  The words are horizontally aligned so that the first letters of all the 
	words form a vertical line.
	You may then shift each of the words any number of places (zero or more) to the right, where one place is the 
	width of a single letter.
	The goal of the game is to shift the puzzle words such that the goal word can be read vertically from top to 
	bottom in a straight line. See examples for clarification.
</p>
<br></br>
<p>
	Your score is the sum of the number of places each puzzle word was shifted. 
	Return the minimal score you can obtain while achieving your goal, or -1 if it is impossible.
</p>
</td></tr><tr><td colspan="2"><h3>Definition</h3></td></tr><tr><td>&#160;&#160;&#160;&#160;</td><td><table><tr><td>Class:</td><td>MatchString</td></tr><tr><td>Method:</td><td>placeWords</td></tr><tr><td>Parameters:</td><td>string, string[]</td></tr><tr><td>Returns:</td><td>int</td></tr><tr><td>Method signature:</td><td>int placeWords(string matchString, string[] matchWords)</td></tr><tr><td colspan="2">(be sure your method is public)</td></tr></table></td></tr><tr><td>&#160;&#160;&#160;&#160;</td></tr><tr><td></td></tr><tr><td colspan="2"><h3>Constraints</h3></td></tr><tr><td align="center" valign="top">-</td><td><b>matchWords</b> will contain between 1 and 50 elements, inclusive.</td></tr><tr><td align="center" valign="top">-</td><td>Each element of <b>matchWords</b> will contain between 1 and 50 characters, inclusive.</td></tr><tr><td align="center" valign="top">-</td><td>Each element of <b>matchWords</b> will contain only uppercase letters ('A'-'Z').</td></tr><tr><td align="center" valign="top">-</td><td><b>matchString</b> will contain the same number of characters as the number of elements in <b>matchWords</b>.</td></tr><tr><td align="center" valign="top">-</td><td><b>matchString</b> will contain only uppercase letters ('A'-'Z').</td></tr><tr><td colspan="2"><h3>Examples</h3></td></tr><tr><td align="center" nowrap="true">0)</td><td></td></tr><tr><td>&#160;&#160;&#160;&#160;</td><td><table><tr><td><table><tr><td><pre>&quot;TOP&quot;</pre></td></tr><tr><td><pre>{&quot;TIK&quot;, 
 &quot;PPPO&quot;, 
 &quot;OP&quot;}</pre></td></tr></table></td></tr><tr><td><pre>Returns: 5</pre></td></tr><tr><td><table><tr><td colspan="2">The final arrangement is
<pre>   <b>T</b>IK</pre>
<pre>PPP<b>O</b></pre>
<pre>  O<b>P</b></pre>
The first word is shifted 3 places, and the last word is shifted 2 places.<br></br>
In this arrangement, the goal word can be read vertically in the fourth column from the right (shown in bold).</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap="true">1)</td><td></td></tr><tr><td>&#160;&#160;&#160;&#160;</td><td><table><tr><td><table><tr><td><pre>&quot;EEA&quot;</pre></td></tr><tr><td><pre>{&quot;GEGA&quot;, 
 &quot;TOPCODER&quot;, 
 &quot;TEST&quot;}</pre></td></tr></table></td></tr><tr><td><pre>Returns: -1</pre></td></tr><tr><td><table><tr><td colspan="2">The puzzle words must be used in the order they are given, so it is impossible to form the goal word in this case.</td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap="true">2)</td><td></td></tr><tr><td>&#160;&#160;&#160;&#160;</td><td><table><tr><td><table><tr><td><pre>&quot;AB&quot;</pre></td></tr><tr><td><pre>{&quot;ABA&quot;, 
 &quot;ABAB&quot;}</pre></td></tr></table></td></tr><tr><td><pre>Returns: 1</pre></td></tr><tr><td><table><tr><td colspan="2">One possible arrangement is
<pre> <b>A</b>BA</pre>
<pre>A<b>B</b>AB</pre></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap="true">3)</td><td></td></tr><tr><td>&#160;&#160;&#160;&#160;</td><td><table><tr><td><table><tr><td><pre>&quot;FIND&quot;</pre></td></tr><tr><td><pre>{&quot;VERYFAST&quot;, 
 &quot;OPINION&quot;, 
 &quot;SPENDING&quot;, 
 &quot;ODD&quot;}</pre></td></tr></table></td></tr><tr><td><pre>Returns: 3</pre></td></tr><tr><td><table><tr><td colspan="2"><pre>VERY<b>F</b>AST</pre>
<pre>OPIN<b>I</b>ON</pre>
<pre> SPE<b>N</b>DING</pre>
<pre>  OD<b>D</b></pre></td></tr></table></td></tr></table></td></tr><tr><td align="center" nowrap="true">4)</td><td></td></tr><tr><td>&#160;&#160;&#160;&#160;</td><td><table><tr><td><table><tr><td><pre>&quot;TOP&quot;</pre></td></tr><tr><td><pre>{&quot;OUTTHERE&quot;, 
 &quot;FROM&quot;, 
 &quot;NOPQRSTU&quot;}</pre></td></tr></table></td></tr><tr><td><pre>Returns: 0</pre></td></tr><tr><td><table><tr><td colspan="2">The final arrangement can be made without shifting at all:
<pre>OU<b>T</b>THERE</pre>
<pre>FR<b>O</b>M</pre>
<pre>NO<b>P</b>QRSTU</pre></td></tr></table></td></tr></table></td></tr></table><p>This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  </p></body></html>
